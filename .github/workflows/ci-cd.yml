name: Deploy App

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    build-test-lint:
        runs-on: ubuntu-latest
        environment: Production

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Install pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 10.7.0

            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  node-version-file: '.nvmrc'
                  cache: 'pnpm'

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Check linting
              run: pnpm lint

            - name: Check formatting
              run: pnpm format:check

            - name: Run tests
              env:
                NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
                NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
                NEXT_PUBLIC_BASE_URL: ${{ secrets.NEXT_PUBLIC_BASE_URL }}
                SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
                OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
              run: pnpm test

            - name: Check build
              env:
                  NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
                  NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
                  NEXT_PUBLIC_BASE_URL: ${{ secrets.NEXT_PUBLIC_BASE_URL }}
                  SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
                  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
              run: pnpm build

    deploy:
        needs: build-test-lint
        runs-on: ubuntu-latest
        environment: Production
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 10.7.0

            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  node-version-file: '.nvmrc'
                  cache: 'pnpm'

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Install Vercel CLI
              run: pnpm add -g vercel

            - name: Link to Vercel Project
              run: vercel link --token=${{ secrets.VERCEL_TOKEN }} --yes

            - name: Deploy to Vercel
              run: vercel deploy --prod --yes --token=${{ secrets.VERCEL_TOKEN }}
